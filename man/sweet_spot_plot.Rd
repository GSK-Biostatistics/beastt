% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim-plots.R
\name{sweet_spot_plot}
\alias{sweet_spot_plot}
\title{Create Sweet Spot Plots for Multiple Simulation Scenarios}
\usage{
sweet_spot_plot(
  .data,
  scenario_vars,
  trt_diff,
  control_marg_param,
  power_prior,
  h0_prob,
  h0_prob_no_borrowing
)
}
\arguments{
\item{.data}{A data frame containing iteration-level simulation results.}

\item{scenario_vars}{A vector of unquoted column names that define the unique
scenarios to create plots for. Each unique combination of values in these
columns will generate a separate plot.}

\item{trt_diff}{An unquoted column name representing the treatment
difference. Used to identify scenarios with null effect (trt_diff = 0) for
Type I error calculation.}

\item{control_marg_param}{An unquoted column name to be used as the x-axis in the plots.
This is typically the control end point of interest ton the marginal scale (e.g. Control Response Rate)}

\item{power_prior}{An unquoted column name containing distributional objects
that represent the power prior distribution.}

\item{h0_prob}{An unquoted column name containing the probability of
accepting the null hypothesis when using borrowing.}

\item{h0_prob_no_borrowing}{An unquoted column name containing the
probability of accepting the null hypothesis without borrowing.}
}
\value{
A list of ggplot objects, one for each unique scenario defined by
\code{scenario_vars}. Each plot shows:
\itemize{
\item Power curves with (and without borrowing if \code{h0_prob_no_borrowing} is given)
\item Type I error rates with (and without borrowing if \code{h0_prob_no_borrowing} is given)
\item Average Distribution of the power priors
}
}
\description{
Creates visualization plots to help identify the "sweet spot" in borrowing
strategies across different simulation scenarios. For each unique scenario
defined by the combination of variables in \code{scenario_vars}, the function
produces a plot showing power, Type I error, and power prior distribution.
}
\details{
The function calculates power and Type I error rates for each
scenario and visualizes them together with the average power prior distribution. This
helps identify the "sweet spot" where borrowing provides power gains while
maintaining acceptable Type I error rates.

Type I error is calculated using scenarios where \code{trt_diff} equals 0. Power
is calculated across all scenarios.
}
\examples{

# Assuming sim_results is a data frame with simulation results in the shape of binary template code
plots <- sweet_spot_plot(
  .data = binary_sim_df,
  scenario_vars = c("population", "marg_trt_eff"),
  trt_diff = marg_trt_eff,
  control_marg_param = true_control_RR,
  power_prior = pwr_prior,
  h0_prob = reject_H0_yes,
  h0_prob_no_borrowing = no_borrowing_reject_H0_yes
)

# Display the first plot
plots[[1]]


}
